From 3897d6c670a54157f2cacff5fb28186e40bc2fb3 Mon Sep 17 00:00:00 2001
From: "e.min" <e.min@samsung.com>
Date: Mon, 28 May 2018 13:31:42 +0900
Subject: [PATCH 28/47] fix synchronization bug when notification
 enqueue/cancel

Test: this is a bug fix,
Test: some app do startForegroundService() and then stopForegroundService() right away.
Test: at this time, enqueue runnable and cancel runnable are conflicted.
Test: EnqueueNotificationRunnable -> CancelNotification -> PostNotificationRunnable
Test: usually, in this moment 3rd notification posting is not executed.
Test: but, if app want to keep their notification, handler queue order is like below.
Test: EnqueueNotificationRunnable -> removeForegroundServiceFlagFromNotification() -> CancelNotification -> PostNotificationRunnable.
Test: 4th runnable would be canceled. but in removeForegroundServiceFlagFromNotification(),
Test: notification is posted to all listener and synchronization is broken.
Test: NMS doesn't have a notification and all listener module has a ghost notification.

Change-Id: I1f9a4cdb5c3eb8174286fda6ca54b0f1793702ce
Signed-off-by: Adesh15 <adesikha15@gmail.com>
---
 .../server/notification/NotificationManagerService.java      | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/services/core/java/com/android/server/notification/NotificationManagerService.java b/services/core/java/com/android/server/notification/NotificationManagerService.java
index 0bea83bdb76..c2a6de2f8e9 100644
--- a/services/core/java/com/android/server/notification/NotificationManagerService.java
+++ b/services/core/java/com/android/server/notification/NotificationManagerService.java
@@ -3471,9 +3471,9 @@ public class NotificationManagerService extends SystemService {
                 public void run() {
                     synchronized (mNotificationLock) {
                         removeForegroundServiceFlagByListLocked(
-                                mEnqueuedNotifications, pkg, notificationId, userId);
+                                mEnqueuedNotifications, pkg, notificationId, userId, false);
                         removeForegroundServiceFlagByListLocked(
-                                mNotificationList, pkg, notificationId, userId);
+                                mNotificationList, pkg, notificationId, userId, true);
                     }
                 }
             });
@@ -3482,7 +3482,7 @@ public class NotificationManagerService extends SystemService {
         @GuardedBy("mNotificationLock")
         private void removeForegroundServiceFlagByListLocked(
                 ArrayList<NotificationRecord> notificationList, String pkg, int notificationId,
-                int userId) {
+                int userId, boolean needPosted) {
             NotificationRecord r = findNotificationByListLocked(
                     notificationList, pkg, null, notificationId, userId);
             if (r == null) {
@@ -3495,8 +3495,10 @@ public class NotificationManagerService extends SystemService {
             // initially *and* force remove FLAG_FOREGROUND_SERVICE.
             sbn.getNotification().flags =
                     (r.mOriginalFlags & ~Notification.FLAG_FOREGROUND_SERVICE);
-            mRankingHelper.sort(mNotificationList);
-            mListeners.notifyPostedLocked(sbn, sbn /* oldSbn */);
+            if (needPosted) {
+                mRankingHelper.sort(mNotificationList);
+                mListeners.notifyPostedLocked(sbn, sbn /* oldSbn */);
+            }
         }
     };
 
-- 
2.11.0

