From 8d6c95b6b6c33f3226a17a78fc3f4b11ee47ce3d Mon Sep 17 00:00:00 2001
From: Till Kottmann <deletescape@gmail.com>
Date: Mon, 4 Jun 2018 19:14:22 +0200
Subject: [PATCH 66/69] Cache the global proxy to avoid fetching it for every
 request

Change-Id: I37573cd9c5484661f0295894d320e4617ac175e3
Signed-off-by: Josh Fox (XlxFoXxlX) <joshfox87@gmail.com>
---
 core/java/android/net/Network.java | 32 ++++++++++++++++++------------
 1 file changed, 19 insertions(+), 13 deletions(-)

diff --git a/core/java/android/net/Network.java b/core/java/android/net/Network.java
index 0c0872a78f7..b8aef3ea6f4 100644
--- a/core/java/android/net/Network.java
+++ b/core/java/android/net/Network.java
@@ -83,6 +83,8 @@ public class Network implements Parcelable {
     private static final long httpKeepAliveDurationMs =
             Long.parseLong(System.getProperty("http.keepAliveDuration", "300000"));  // 5 minutes.
 
+    private java.net.Proxy mProxy = null;
+
     /**
      * @hide
      */
@@ -238,6 +240,22 @@ public class Network implements Parcelable {
         }
     }
 
+    private java.net.Proxy getProxy() throws IOException {
+        if (mProxy == null) {
+            final ConnectivityManager cm = ConnectivityManager.getInstanceOrNull();
+            if (cm == null) {
+                throw new IOException("No ConnectivityManager yet constructed, please construct one");
+            }
+            final ProxyInfo proxyInfo = cm.getProxyForNetwork(this);
+            if (proxyInfo != null) {
+                mProxy = proxyInfo.makeProxy();
+            } else {
+                mProxy = java.net.Proxy.NO_PROXY;
+            }
+        }
+        return mProxy;
+    }
+
     /**
      * Opens the specified {@link URL} on this {@code Network}, such that all traffic will be sent
      * on this Network. The URL protocol must be {@code HTTP} or {@code HTTPS}.
@@ -248,19 +266,7 @@ public class Network implements Parcelable {
      * @see java.net.URL#openConnection()
      */
     public URLConnection openConnection(URL url) throws IOException {
-        final ConnectivityManager cm = ConnectivityManager.getInstanceOrNull();
-        if (cm == null) {
-            throw new IOException("No ConnectivityManager yet constructed, please construct one");
-        }
-        // TODO: Should this be optimized to avoid fetching the global proxy for every request?
-        final ProxyInfo proxyInfo = cm.getProxyForNetwork(this);
-        java.net.Proxy proxy = null;
-        if (proxyInfo != null) {
-            proxy = proxyInfo.makeProxy();
-        } else {
-            proxy = java.net.Proxy.NO_PROXY;
-        }
-        return openConnection(url, proxy);
+        return openConnection(url, getProxy());
     }
 
     /**
-- 
2.18.0

