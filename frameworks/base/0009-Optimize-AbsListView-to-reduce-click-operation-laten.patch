From 17a36d6cf55982a28f2d664c06fae111d40bd15b Mon Sep 17 00:00:00 2001
From: Jun Wang <junwan@codeaurora.org>
Date: Wed, 17 Jan 2018 17:54:43 +0800
Subject: [PATCH 1/1] Optimize AbsListView to reduce click operation latency

Separate performClick from delayed message. Then we can do
performClick in advance of PRESSED_STATE_DURATION(64ms) delay.
This will benefit for click operation latency. The delayed
message is still used to clear pressed status.

Change-Id: I6748a6cfaf997cc0e6f6ad35a76d68ae608660ec
CRs-Fixed: 2166045
Signed-off-by: mydongistiny <jaysonedson@gmail.com>
---
 core/java/android/widget/AbsListView.java | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/core/java/android/widget/AbsListView.java b/core/java/android/widget/AbsListView.java
index 90014b7a6a6..a8aa5fc9333 100644
--- a/core/java/android/widget/AbsListView.java
+++ b/core/java/android/widget/AbsListView.java
@@ -4193,6 +4193,11 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
                                 }
                                 mSelector.setHotspot(x, ev.getY());
                             }
+                            if (!mDataChanged && !mIsDetaching && isAttachedToWindow()) {
+                                if (!post(performClick)) {
+                                    performClick.run();
+                                }
+                            }
                             if (mTouchModeReset != null) {
                                 removeCallbacks(mTouchModeReset);
                             }
@@ -4203,9 +4208,6 @@ public abstract class AbsListView extends AdapterView<ListAdapter> implements Te
                                     mTouchMode = TOUCH_MODE_REST;
                                     child.setPressed(false);
                                     setPressed(false);
-                                    if (!mDataChanged && !mIsDetaching && isAttachedToWindow()) {
-                                        performClick.run();
-                                    }
                                 }
                             };
                             postDelayed(mTouchModeReset,
-- 
2.11.0

